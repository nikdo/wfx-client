/* Space holder is here to help achieve shadow for both input and dropdown
   while keeping the dropdown absolutely positioned above content.
   https://github.com/nikdo/wind-alert/issues/4#issuecomment-469870444
 */
.spaceHolder {
  height: var(--input-height);
  width: 20rem;
  position: relative;
}

.spaceHolder.fat {
  height: var(--input-fat-height);
}

.container {
  width: 100%;
  position: absolute;
  /* Fixes bug with IOS Safari positioning -webkit-overflow-scrolling: touch
     above dropdown.
     Similar issue: https://stackoverflow.com/q/37696746/5763764
  */
  z-index: 1;
  box-sizing: border-box;
  border: var(--input-border-width) solid transparent;
  border-radius: var(--input-border-radius);
  transition-property: box-shadow, border-color;
  transition-duration: var(--transition-duration);
  transition-timing-function: ease-out;
  overflow: hidden;
}

.focused .container {
  border-color: var(--color-border-inverted);
  box-shadow: var(--fat-shadow);
}

.input {
  display: block;
  width: 100%;
  border: none;
  outline: none;
  padding: var(--input-padding);
}

.input:disabled {
  color: var(--color-secondary-text-inverted);
}

.fat .input {
  font-size: var(--font-size-large);
  padding: var(--input-fat-padding);
}

.input::placeholder {
  position: relative;
  left: 1px;
}

.fat .input::placeholder {
  color: var(--color-secondary-text-inverted);
}

.suggestionsContainer {
  --suggestion-approximate-height: calc(2.5 * var(--baseline));
  max-height: calc(4.5 * var(--suggestion-approximate-height));
  overflow-y: scroll;
  -webkit-overflow-scrolling: touch;
  background-color: var(--color-background);
}

.suggestionsContainerOpen {
  border-top: var(--input-border-width) solid var(--color-border-inverted);
}

ul.suggestionsList {
  list-style: none;
  margin: 0;
  padding: 0;
}

li.suggestion {
  padding: var(--input-fat-padding);
  cursor: default;
}

li.suggestionHighlighted {
  background: var(--gradient-selected);
}

li:last-child.suggestionHighlighted {
  border-bottom-left-radius: calc(var(--input-border-radius) - var(--input-border-width));
  border-bottom-right-radius: calc(var(--input-border-radius) - var(--input-border-width));
}
